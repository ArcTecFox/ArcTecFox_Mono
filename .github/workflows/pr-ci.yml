name: PR CI
on:
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: read

jobs:
  js_check:
    name: Frontend (lint/type/build)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/welcome/frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'apps/welcome/frontend/package-lock.json'
      - run: npm ci
      - run: npm run lint --if-present
      - run: npm run typecheck --if-present
      - run: npm run test --if-present
      - run: npm run build --if-present

  py_check:
    name: Backend (ruff/bandit/syntax)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/welcome/backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - run: pip install -r requirements.txt
      - run: pip install ruff bandit
      - run: ruff check .
      - run: bandit -r . || true
      - name: Python syntax check
        run: |
          python - <<'PY'
          import subprocess, sys
          files = subprocess.check_output(["git","ls-files","*.py"], text=True).strip().splitlines()
          bad = False
          for f in files:
            try:
              compile(open(f,"rb").read(), f, "exec")
            except Exception as e:
              bad = True; print(f"[SYNTAX ERROR] {f}: {e}", file=sys.stderr)
          sys.exit(1 if bad else 0)
          PY

  security_basics:
    name: Security & Dependency Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Secrets scan (TruffleHog)
        uses: trufflesecurity/trufflehog@v3
        with:
          extra_args: "--entropy=False --regex --json ."
      - name: NPM audit (prod)
        uses: actions/setup-node@v4
        with: { node-version: '20' }
      - run: npm i -g npm@latest
      - run: npm audit --omit=dev || true
      - name: pip-audit
        run: |
          python -m pip install --upgrade pip
          pip install pip-audit
          pip-audit || true
